% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/select_var.r
\name{select_var}
\alias{select_var}
\title{select_var()}
\usage{
select_var(
  databa,
  Y,
  type_Y = "ORD",
  threshX = 0.9,
  threshY = 0.95,
  thresh_vif = 10,
  index_var = 2:ncol(databa)
)
}
\arguments{
\item{databa}{A data.frame containing variable of any type}

\item{Y}{A character string (with quotes) corresponding to the name of the target variable}

\item{type_Y}{A character string (with quotes) corresponding to the type of the target variable. "ORD" (Default) for ordinal type, "MUL" for multinomial type,
and "BIN" for binary type}

\item{threshX}{A double (=0.90 by default) that corresponds to a threshold taken between 0 and 1. Beyond this threshold two variables are considered too highly correlated}

\item{threshY}{A double (=0.95 by default) that corresponds to a threshold taken between 0 and 1. Beyond this threshold, a variable is considered too highly correlated with the target Y}

\item{thresh_vif}{A double that corresponds to a threshold (10 by default) of the Variance Important Factor beyond which a multicolinearity situation is highlighted}

\item{index_var}{A vector of integers that specifies the column indices associated with the covariates}
}
\value{
A list of 6 elements is returned:
\item{Y}{A simple reminder of the label of the target of interest}
\item{cor_Y}{A list of covariates that are considered too highly correlated (Spearman coefficient) to the target variable}
\item{VIF_PB}{A list of covariates which inclusion in regressions could lead to severity problem of multicollinearities}
\item{cor_X}{A list of covariates that are considered too highly correlated (Spearman coefficient) with other covariates}
}
\description{
This function preselects interesting covariates for data integration according
to their associations with a target variable. It also detects problem of colinearities between covariates and suggests covariates to remove and interesting candidates to keep
When applying Optimal Transportation theory for data interation is the objective of the study, we suggest to apply this function beforehand to the OT function, on each of the two databases to be merged
}
\examples{

# Ex 1:
data(tab_test)
tab1 = tab_test[tab_test$ident == 2,]

# By taking the ordinal variable Y2 as target:
select1 = select_var(tab1,Y = "Y2",index_var = 4:6)

# Ex 2:
# Using the simu_data table, firstly, we separate the 2 bases A and B ...
data(simu_data)
simu_A = simu_data[simu_data$DB == "A",]    # Base A
simu_B = simu_data[simu_data$DB == "B",]    # Base B

# In DB A, the target variable is Yb1.
# The indexes of the column covariates go from 4 to 8.
# By keeping the other default parameters:

select_A = select_var(simu_A,Y = "Yb1",index_var = 4:8)

# We conclude here that all covariates seems to be good candidates for OT

# Following the same reasoning for the database B:
select_B = select_var(simu_B,Y = "Yb2",index_var = 4:8)

# We conclude here that all covariates seems to be good candidates for OT


# By supposing that the Treatment variable (not ordered) is the target in the DB A:
select_A = select_var(simu_A,Y = "Treatment",type_Y = "MUL",index_var = c(2,4,6:8))

# By supposing that the Gender variable (binary) is the target in the DB A:
select_A = select_var(simu_A,Y = "Gender",type_Y = "BIN",index_var = c(2,5:8))

}
\author{
Gregory Guernec
\email{gregory.guernec@inserm.fr}
}
