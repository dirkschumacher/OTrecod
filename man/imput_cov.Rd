% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/imput_cov.r
\name{imput_cov}
\alias{imput_cov}
\title{imput_cov()}
\usage{
imput_cov(dat1, indcol = 1:ncol(dat1), R_mice = 5, meth = rep("pmm",
  ncol(dat1)), missMDA = FALSE, NB_COMP = 3,
  seed_choice = sample(1:1e+06, 1))
}
\arguments{
\item{dat1}{A data.frame. containing the variables to be imputed and the one participating in the imputations}

\item{indcol}{A vector of integers. The corresponding column numbers corresponding to the variables to be imputed and those which participate in the imputations.}

\item{R_mice}{An integer. The number of imputed database to generate with MICE method (5 by default).}

\item{meth}{A vector of characters which specify the imputation method to be used for each column in dat1.
"pmm" for a continuous covariate, "logreg" for a binary covariate, "polr" for an ordinal covariate, "polyreg" for an ordinal covariates.}

\item{missMDA}{A boolean. If TRUE, missing values are imputed using the factoral analysis for mixed data (FAMD) from the missMDA package (Simple imputation)}

\item{NB_COMP}{An integer corresponding to the number of components used to predict the missing entries (3 by default)}

\item{seed_choice}{An integer used as argument by the set.seed() for offsetting the random number generator (Random integer by default)}
}
\value{
A list of 3 objects:
        RAW A data.frame corresponding to the raw database
        IMPUTE A character corresponding to the type of imputation selected
        DATA_IMPUTE A dta.frame The imputed (consensus if multiple imputations) database
        MICE_IMPS
}
\description{
A function which performs imputations on variables using MICE (Van Buuren's Multiple Imputation) or missMDA (Simple Imputation wiht Multivariate data analysis)
(missMDA and mice packages required)
}
\examples{
# Require samp.A database from the StatMatch package.
# c.neti and c.neti.bis coded voluntarily in 2 distinct
# encodings.
library(StatMatch)
library(mice)
library(missMDA)
data(samp.A)
samp.A = samp.A[,c(1:11,13,12)]
c.neti            = as.numeric(samp.A$c.neti)

samp.A$c.neti.bis = as.factor(ifelse(c.neti \%in\% c(1,2),1,
                             ifelse(c.neti \%in\% c(3,4),2,
                             ifelse(c.neti \%in\% c(5,6),3,4))))
data1 = samp.A[1:1000,c(2:9,13)]
data2 =samp.A[1001:nrow(samp.A),c(5:11,12,14)]

# Insert the variable marital in 2 different types:
data1$marital = as.numeric(data1$marital)

# Insert different levels in a factor variable:
data2$c.age = as.character(data2$c.age)
data2$c.age[data2$c.age \%in\% c("[16,34]","(34,44]")] = "[16,44]"
data2$c.age = as.factor(data2$c.age)

# Add NA in covariates:
add_NA = function(DB,tx){
DB_NA = DB
for (j in 1:ncol(DB)){
   NA_indic = sample(1:nrow(DB),round(nrow(DB)*tx/100),replace=FALSE)
   DB_NA[NA_indic,j] = rep(NA,length(NA_indic))
 }
 return(DB_NA)
}

set.seed(4036); data3 = add_NA(data1,10); data4 = add_NA(data2,10)
soluc2  = merge_dbs(data3,data4,
NAME_Y1 = "c.neti",NAME_Y2 = "c.neti.bis",
ordinal_DB1 = c(2,4,6,9),
ordinal_DB2 = c(1,3,9), impute = "NO")

imput_mice = imput_cov(soluc2$DB_READY,indcol = 4:6,
                        R_mice = 3,meth = c("pmm","polr","logreg"))
summary(imput_mice)
imput_famd = imput_cov(soluc2$DB_READY,indcol = 4:6,
                       meth = c("pmm","polr","logreg"),missMDA = TRUE)
summary(imput_famd)

}
